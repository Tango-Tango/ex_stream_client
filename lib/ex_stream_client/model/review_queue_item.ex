defmodule ExStreamClient.Model.ReviewQueueItem do
  @moduledoc "Schema representing a ReviewQueueItem"
  use ExStreamClient.Jason

  @enforce_keys [
    :actions,
    :ai_text_severity,
    :bans,
    :bounce_count,
    :config_key,
    :content_changed,
    :created_at,
    :entity_id,
    :entity_type,
    :flags,
    :flags_count,
    :has_image,
    :has_text,
    :has_video,
    :id,
    :languages,
    :moderation_payload_hash,
    :recommended_action,
    :reviewed_at,
    :reviewed_by,
    :severity,
    :status,
    :teams,
    :updated_at
  ]
  defstruct [
    :actions,
    :activity,
    :ai_text_severity,
    :assigned_to,
    :bans,
    :bounce_count,
    :call,
    :config_key,
    :content_changed,
    :created_at,
    :entity_creator,
    :entity_id,
    :entity_type,
    :feeds_v2_activity,
    :feeds_v2_reaction,
    :flags,
    :flags_count,
    :has_image,
    :has_text,
    :has_video,
    :id,
    :languages,
    :message,
    :moderation_payload,
    :moderation_payload_hash,
    :reaction,
    :recommended_action,
    :reviewed_at,
    :reviewed_by,
    :severity,
    :status,
    :teams,
    :updated_at
  ]

  @type t :: %__MODULE__{
          actions: [ExStreamClient.Model.ActionLog.t()],
          activity: ExStreamClient.Model.EnrichedActivity.t() | nil,
          ai_text_severity: String.t(),
          assigned_to: ExStreamClient.Model.User.t() | nil,
          bans: [ExStreamClient.Model.Ban.t()],
          bounce_count: integer(),
          call: ExStreamClient.Model.Call.t() | nil,
          config_key: String.t(),
          content_changed: boolean(),
          created_at: float(),
          entity_creator: ExStreamClient.Model.EntityCreator.t() | nil,
          entity_id: String.t(),
          entity_type: String.t(),
          feeds_v2_activity: ExStreamClient.Model.EnrichedActivity.t() | nil,
          feeds_v2_reaction: ExStreamClient.Model.Reaction.t() | nil,
          flags: [ExStreamClient.Model.Flag.t()],
          flags_count: integer(),
          has_image: boolean(),
          has_text: boolean(),
          has_video: boolean(),
          id: String.t(),
          languages: [String.t()],
          message: ExStreamClient.Model.Message.t() | nil,
          moderation_payload: ExStreamClient.Model.ModerationPayload.t() | nil,
          moderation_payload_hash: String.t(),
          reaction: ExStreamClient.Model.Reaction.t() | nil,
          recommended_action: String.t(),
          reviewed_at: ExStreamClient.Model.NullTime.t(),
          reviewed_by: String.t(),
          severity: integer(),
          status: String.t(),
          teams: [String.t()],
          updated_at: float()
        }
end